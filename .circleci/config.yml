version: 2.1

orbs:
  windows: circleci/windows@5.0.0

commands:
  clone_hosting:
    parameters:
      buildType:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - "12:41:3e:8a:8f:e0:54:05:f1:4c:a3:85:0b:49:1b:c8"
            - "56:0c:4f:e9:f6:44:2d:cc:ea:78:cb:bf:fe:56:be:b5"
      - run: mkdir -p ~/circleci-working/<<pipeline.id>>
      - run:
          name: Setup git config
          command: git config --global user.name "CircleCI"; git config --global user.email "CircleCI@lumination.com.au"
      - run:
          name: Add github to known hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - when:
          condition:
            and:
              - equal: [Development, <<parameters.buildType>>]
          steps:
            - run:
                name: Write ssh config file
                command: echo "Host github.com" > ~/.ssh/config; echo "  IdentitiesOnly yes" >> ~/.ssh/config; echo "  IdentityFile ~/.ssh/id_rsa_560c4fe9f6442dccea78cbbffe56beb5" >> ~/.ssh/config
            - run:
                name: Clone hosting server
                command: cd ~/circleci-working/<<pipeline.id>>; git clone git@github.com:LuminationDev/LeadMeLabs-Launcher-Hosting-Development.git
      - when:
          condition:
            and:
              - equal: [Release, <<parameters.buildType>> ]
          steps:
            - run:
                name: Write ssh config file.
                command: echo "Host github.com" > ~/.ssh/config; echo "  IdentitiesOnly yes" >> ~/.ssh/config; echo "  IdentityFile ~/.ssh/id_rsa_12413e8a8fe05405f14ca3850b491bc8" >> ~/.ssh/config
            - run:
                name: Clone hosting server
                command: cd ~/circleci-working/<<pipeline.id>>; git clone git@github.com:LuminationDev/LeadMeLabs-Launcher-Hosting.git

  copy_and_push:
    parameters:
      branch:
        type: string
      repository:
        type: string
    steps:
      - run:
          name: Checkout <<parameters.branch>>
          command: cd ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>; git checkout <<parameters.branch>>
      - run:
          name: Delete old files.
          command: rm -rf ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>/applications/electron-launcher
      - run: mkdir ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>/applications/electron-launcher
      - run:
          name: Copy built files to git repository
          command: cd ~/circleci-working/<<pipeline.id>>/; cp -r ./dist/. ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>/applications/electron-launcher
      - run:
          name: Add built files to git
          command: cd ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>/applications/electron-launcher; git add --all
      - run: ls ~/<<parameters.repository>>/applications/electron-launcher
      - run:
          name: Commit
          command: cd ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>; git commit -m "Update launcher"
      - run:
          name: Push
          command: cd ~/circleci-working/<<pipeline.id>>/<<parameters.repository>>; git push

  windows-npm:
    steps:
      - run: choco install wget -y
      - run:
          command: wget https://nodejs.org/dist/v16.17.0/node-v16.17.0-x86.msi -P C:\Users\circleci\Downloads\
          shell: cmd.exe
      - run: MsiExec.exe /i C:\Users\circleci\Downloads\node-v16.17.0-x86.msi /qn
      - run:
          command: |
            Start-Process powershell -verb runAs -Args "-start GeneralProfile"
            nvm install 16.17.0
            nvm use 16.17.0

  build:
    parameters:
      command:
        type: string
    steps:
      - run: mkdir -p ~/circleci-working/<<pipeline.id>>
      - checkout:
          path: ~/circleci-working/<<pipeline.id>>
      - run:
          name: "npm ci"
          command: cd ~/circleci-working/<<pipeline.id>>; npm ci
      - run:
          name: "build"
          command: cd ~/circleci-working/<<pipeline.id>>; npm run build
      - run:
          name: "electron-build"
          command: cd ~/circleci-working/<<pipeline.id>>; npm run electron-build -- -<<parameters.command>>
      - when:
          condition:
            and:
              - equal: [w, <<parameters.command>>]
          steps:
            - run: rm ~/circleci-working/<<pipeline.id>>/dist/builder-debug.yml
            - run: rm ~/circleci-working/<<pipeline.id>>/dist/win-unpacked/LeadMe.exe
      - persist_to_workspace:
          root: ~/circleci-working/<<pipeline.id>>/
          paths:
            - /
  sign:
    parameters:
      command:
        type: string
    steps:
      - run:
          name: "electron-build"
          command: cd ~/circleci-working/<<pipeline.id>>; npm run electron-build -- -<<parameters.command>>
      - when:
          condition:
            and:
              - equal: [ w, <<parameters.command>> ]
          steps:
            - run: rm ~/circleci-working/<<pipeline.id>>/dist/builder-debug.yml
            - run: rm ~/circleci-working/<<pipeline.id>>/dist/win-unpacked/LeadMe.exe
      - store_artifacts:
          path: ~/circleci-working/<<pipeline.id>>/dist
      - persist_to_workspace:
          root: ~/circleci-working/<<pipeline.id>>/
          paths:
            - dist

jobs:
  build-windows:
    executor:
      name: windows/default
    steps:
      - windows-npm
      - build:
          command: w

  sign:
    machine: true
    resource_class: luminationdev/darragh-comp
    executor:
      name: windows/default
    steps:
      - attach_workspace:
          at: ~/circleci-working/<<pipeline.id>>
      - run:
          command: nvm use 16.17.0
          shell: powershell.exe
      - sign:
          command: w

  commit-and-push:
    docker:
      - image: cimg/node:current
    parameters:
      branch:
        type: string
      repository:
        type: string
      buildType:
        type: string
    steps:
      - clone_hosting:
          buildType: <<parameters.buildType>>
      - attach_workspace:
          at: ~/circleci-working/<<pipeline.id>>
      - copy_and_push:
          branch: <<parameters.branch>>
          repository: <<parameters.repository>>

workflows:
  build_release:
    jobs:
      - hold:
          context: LeadMeDeployers
          type: approval
          filters:
            branches:
              only:
                - main
      - build-windows:
          requires:
            - hold
      - sign:
          requires:
            - build-windows
      - commit-and-push:
          branch: "main"
          buildType: "Release"
          repository: "LeadMeLabs-Launcher-Hosting"
          requires:
            - sign
  build_development:
    jobs:
      - hold:
          context: LeadMeDeployers
          type: approval
      - build-windows:
          requires:
            - hold
      - sign:
          requires:
            - build-windows
      - commit-and-push:
          branch: "main"
          buildType: "Development"
          repository: "LeadMeLabs-Launcher-Hosting-Development"
          requires:
            - sign
